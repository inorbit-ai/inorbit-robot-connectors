# SPDX-FileCopyrightText: 2025 InOrbit, Inc.
#
# SPDX-License-Identifier: MIT

# This is an example configuration file for the Gausium Connector.
# It is used to demonstrate how to configure the connector for a specific robot.
# It is not intended to be used as a production configuration file.
# Definitions for different robots can be hosted in the same file.

my-example-robot:
  # The timezone of the robot location as a pytz timezone (https://pythonhosted.org/pytz/#helpers)
  location_tz: America/Los_Angeles
  # Connector log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
  log_level: INFO
  # The type of connector
  connector_type: V40

  # This is where you define custom fields specific to your robot's connector
  # All fields in this section can also be set in environment variables
  # using the INORBIT_GAUSIUM_ prefix (e.g. base_url -> INORBIT_GAUSIUM_BASE_URL)
  connector_config:
    # Base URL of the API
    base_url: http://ip_and_port
    # (Optional) If true, the connector will not validate the model type of the robot
    # against the connector type.
    # ignore_model_type_validation: false
  
  # (Optional) Camera configuration. Multiple cameras can be configured
  # cameras:
  #   - video_url: rtsp://username:password@192.168.1.256:554/cam/realmonitor?channel=1&subtype=0
  #     rate: 2 # Frames per second (optional)
  #     scaling: 0.3 # Percentage of the original image size (optional)
  #     quality: 60 # JPEG quality (0-100) (optional)

  # (Optional) Map configuration.
  # Each entry represents a map that will be published to InOrbit. If not set, the connector
  # will publish map images downloaded from the robot.
  # This is useful for using custom maps in InOrbit.
  # maps:
  #   <gausium_map_name>:  # Will become the frame_id in InOrbit
  #     file: <path_to_map_image>
  #     map_id: <map_id>
  #     origin_x: <origin_x>
  #     origin_y: <origin_y>
  #     resolution: <resolution>
