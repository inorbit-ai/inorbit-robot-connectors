# There can be multiple robot configurations in a single file
# The InOrbit Robot ID is the key for each robot configuration
'mir100-1':
  # Robot key for InOrbit Connect robots, see https://api.inorbit.ai/docs/index.html#operation/generateRobotKey
  # Delete it if not used
  inorbit_robot_key: <key>
  # This is the timezone of the robot location. It must be a valid pytz timezone: https://pythonhosted.org/pytz/#helpers
  location_tz: America/Los_Angeles
  # Connector log level. Valid values are DEBUG, INFO, WARNING, ERROR, CRITICAL
  log_level: INFO
  # Camera configuration. Multiple cameras can be configured
  cameras:
    - video_url: rtsp://username:password@192.168.1.256:554/cam/realmonitor?channel=1&subtype=0
      rate: 2 # Frames per second (optional)
      scaling: 0.3 # Percentage of the original image size (optional)
      quality: 60 # JPEG quality (0-100) (optional)
  # Configuration specific for the connector that will connect this robot
  connector_type: MiR100
  connector_config:
    mir_host_address: localhost
    mir_host_port: 80
    mir_use_ssl: false
    mir_username: username
    mir_password: password
    mir_api_version: v2.0
    mir_firmware_version: v2
    
    # SSL Configuration - Choose one of these scenarios:
    
    # SCENARIO 1: No SSL (HTTP) - Default for local development
    # mir_use_ssl: false
    # verify_ssl and other SSL options are ignored when mir_use_ssl is false
    
    # SCENARIO 2: SSL with self-signed certificate (quick setup, less secure)
    # mir_use_ssl: true
    # verify_ssl: false  # WARNING: Skips all certificate verification
    
    # SCENARIO 3: SSL with proper certificate verification (RECOMMENDED)
    # mir_use_ssl: true
    verify_ssl: true
    # ssl_ca_bundle: "/path/to/mir-cert.pem"  # Extract MiR's cert: openssl s_client -connect MIR_IP:443 -showcerts </dev/null 2>/dev/null | openssl x509 -outform PEM > mir-cert.pem
    # ssl_verify_hostname: true  # Set to false for FRP/proxy/tunnel setups where hostname doesn't match
    
    # SCENARIO 4: SSL through FRP/VPN/Proxy tunnel (hostname mismatch)
    # mir_use_ssl: true
    # verify_ssl: true
    # ssl_ca_bundle: "/path/to/mir-cert.pem"  # Extract from tunnel endpoint
    # ssl_verify_hostname: false  # Bypass hostname verification for tunnels
    
    # Mission tracking
    # Toggle InOrbit Mission Tracking features. https://developer.inorbit.ai/tutorials#mission-tracking-tutorial
    # Mission Tracking features are not available on every InOrbit edition.
    enable_mission_tracking: false
    
  # Configuration for running user scripts
  # Folder where the user scripts are. If not set, "~/.inorbit_connectors/connector-<robot_id>/local/" will be used
  user_scripts_dir: /home/inorbit/mir100_connector/user_scripts_mir100-1
  # Environment variables that will be available to the user scripts (Optional)
  env_vars:
    INORBIT_API_KEY: foo
    MIR_API_ENDPOINT: 10.0.0.1:80
    MIR_USERNAME: username
    MIR_PASSWORD: password